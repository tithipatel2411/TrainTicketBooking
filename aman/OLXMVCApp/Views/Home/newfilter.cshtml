@model IEnumerable<OLX.Models.User.UserBuyModel>

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>

    <link rel="stylesheet" type="text/css" href="styles.css">
    <style>
        .advertisement-list {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
        }

        .advertisement-card {
            border: 1px solid #ccc;
            border-radius: 10px;
            padding: 20px;
            margin: 10px;
            max-width: 300px;
            text-align: center;
            background-color: #f9f9f9;
        }

            .advertisement-card img {
                max-width: 300px;
                height: 250px;
                border-radius: 5px;
            }

        .advertisement-details h3 {
            font-size: 1.2em;
            margin: 10px 0;
        }

        .advertisement-details p {
            font-size: 0.9em;
        }
    </style>
</head>
<body>
    <div class="flex-container">
        <div class="advertisement-list">
            @if (Model.Any())
            {
                    foreach (var item in Model.GroupBy(item => item.advertiseId))
                    {
                        <a href="@Url.Action("showAdvertiseDetails", new { advertiseId = item.First().advertiseId })" style="text-decoration:none; color:black">
                            <div class="advertisement-card">
                                <div class="advertisement-content">
                                    @if (item.First().imageData != null && item.First().imageData.Length > 0)
                                    {
                                        var base64Image = Convert.ToBase64String(item.First().imageData);

                                        <img src="data:image/JPG;base64, @base64Image" alt="Image" style="height:200px; width:200px" />

                                    }
                                    <p> @Html.DisplayFor(modelItem => item.First().advertiseId)</p>
                                    <p> @Html.DisplayFor(modelItem => item.First().advertiseTitle)</p>
                                    <p> @Html.DisplayFor(modelItem => item.First().advertisePrice)</p>
                                    <p> @Html.DisplayFor(modelItem => item.First().advertiseDescription)</p>
                                </div>
                            </div>
                        </a>
                    }
            }
            else
            {
                <h3 style="padding-top:150px;">Product is Not available for your search</h3>
            }
        </div>
    </div>

</body>
</html>